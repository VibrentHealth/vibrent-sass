
/*
---
name: inputs
category: components/inputs
---

The Input is initialized via the DOM.

```
     <vbr-input
                id="someName"
                form="someForm"
                type="email"
                label="label"
                placeholder="placeholder"
                ng-model="ex.someModel"
                ng-required="false"
                ng-blur="ex.alert()"
                ng-change="ex.someFunction()"
                ng-minlength="3"
                ng-maxlength="8"
                ng-pattern="somePattern"
                ng-trim="true"
                ng-disabled="ex.disabled"
                validations="ex.someValidations"
                tooltip="ex.tooltipTesting">
            </vbr-input>
```

The Dropdown has the following properties that can be configured during initialization.

---

`id` - *String* - An HTML ID to be associated with the input

`form` - *String* - The name of the form this input is under in the DOM.

`label` - *String* - Label corresponding to the input

`type` - *String* - String representing the type of HTML input email,text, etc.

`placeholder` - *String* - placeholder text inserted in the placeholder attribute.

`ng-model` - *Angular Model* - Angular model that will be updated via 2 way data binding.

`ng-required` - *Boolean* - A boolean representing whether or not the input is required

`ng-change` - *Function* - A function to be called when the input changes state

`ng-blur` - *Function* - A function to be called when the input looses focus

`ng-minlength` - *Integer* - An integer of the minlength of the field

`ng-maxlength` - *Integer* - An integer of the maxlength of the field

`ng-pattern` - *Regex* - A regex for patten matching

`ng-trim` - *Boolean* - A boolean value of whether or not to trim the input

`ng-disabled` - *Boolean* - A boolean value of whether or not the input should be disabled

`validations` - *Object* - Object with all of the validations for an input `'email': {message: 'Email is invalid'}`


!![](./input_example.html)
 */

.vbr-input, vbr-input{
    margin: $content-padding;
    font-family: $input-font;
    position: relative;
    @include display-flex;
    @include flex-direction(column);

    .vbr-tooltip{
        font-family: $input-font;
        /* Specify styling for tooltip contents */
        .tooltip-inner {
            background-color: $input-tooltip-bg-color;
            color: $input-tooltip-color;
            font-size: $input-tooltip-font-size;
            border-radius: $input-tooltip-border-radius;
            padding: $content-padding;
        }
        /* To style arrow */
        .tooltip-arrow {
            border-top-color: $input-tooltip-bg-color;
            left: 20px !important;
        }
    }


    input{
        font-size: $input-default-font-size;
        color: $input-default-font-color;
        border: 0;
        width:100%;
        @include vbr-bottom-border($input-default-border-color, $input-default-border-style, $input-default-border-width);
        padding-bottom: $input-default-border-vertical-padding;
        @include vbr-placeholder($input-default-placeholder-color, $input-disabled-font-color);
        &:focus{
            border-bottom-color: $input-focused-border-color;
            border-bottom-width: $input-focused-border-width;
        }
        &.error{
            border-bottom-color: $input-error-border-color;
            border-bottom-width: $input-error-border-width;
        }
        &:disabled, &.disabled{
            color: $input-disabled-font-color;
            border-bottom-style: $input-disabled-border-style;
            border-bottom-color: $input-disabled-border-color;
        }
    }
    label{
        position: absolute;
        bottom: - ($input-default-border-vertical-padding*3 + 2px);
        margin: $input-default-border-vertical-padding 0;
        font-size: $input-default-label-font-size;
        color: $input-default-label-color;
        &:disabled, &.disabled{
            color: $input-disabled-label-color;
        }
    }
    .input-error-message{
        font-size: $input-error-message-font-size;
        color: $input-error-message-color;
        background-color: $input-error-message-bg-color;
        border-radius: $large-border-radius;
        position: relative;
        top: ($input-default-border-vertical-padding*3 + $input-default-label-font-size*2 + $content-padding + 2px);
        width: 100%;
        padding: $content-padding/2 $content-padding;
        margin-bottom: 5px;
        margin-top: 5px;
    }
}

.vbr-input-large{
    @extend .vbr-input;
    input{
        font-size: $input-large-font-size;
        padding-bottom: $input-large-border-vertical-padding;

    }
    label{
        bottom: - ($input-large-border-vertical-padding*3 + 2px);
        margin: $input-large-border-vertical-padding 0;
        font-size: $input-large-label-font-size;
    }
    .input-error-message{
        font-size: $input-error-message-font-size;
        top: ($input-large-border-vertical-padding*3 + $input-large-label-font-size*2 + $content-padding + 2px);
    }
}

