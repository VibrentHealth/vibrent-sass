/**
  Mixins used throughout framework defined here

  created by: Moustafa Baiou
 */

// BACKGROUNDS
// --------------------------------------------------
@mixin background-image($imageUrl){
  background-image: url($imageUrl);
  -webkit-background-image: url($imageUrl);
  -o-background-image: url($imageUrl);
  -moz-background-image: url($imageUrl);
}

@mixin background-size($size){
  background-size: $size;
  -webkit-background-size: $size;
  -o-background-size: $size;
  -moz-background-size: $size;
}

// ANIMATIONS
// --------------------------------------------------
// keyframes mixins
// taken from http://joshbroton.com/quick-fix-sass-mixins-for-css-keyframe-animations/

@mixin animation($animate...) {
  $max: length($animate);
  $animations: '';

  @for $i from 1 through $max {
    $animations: #{$animations + nth($animate, $i)};

    @if $i < $max {
      $animations: #{$animations + ", "};
    }
  }
  -webkit-animation: $animations;
  -moz-animation:    $animations;
  -o-animation:      $animations;
  animation:         $animations;
}

@mixin keyframes($animationName) {
  @-webkit-keyframes #{$animationName} {
    @content;
  }
  @-moz-keyframes #{$animationName} {
    @content;
  }
  @-o-keyframes #{$animationName} {
    @content;
  }
  @keyframes #{$animationName} {
    @content;
  }
}

// BORDERS
// --------------------------------------------------
// taken from https://github.com/driftyco/ionic-v1

@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
  border-radius: $radius;
}

// Single Corner Border Radius
@mixin border-top-left-radius($radius) {
  -webkit-border-top-left-radius: $radius;
  border-top-left-radius: $radius;
}
@mixin border-top-right-radius($radius) {
  -webkit-border-top-right-radius: $radius;
  border-top-right-radius: $radius;
}
@mixin border-bottom-right-radius($radius) {
  -webkit-border-bottom-right-radius: $radius;
  border-bottom-right-radius: $radius;
}
@mixin border-bottom-left-radius($radius) {
  -webkit-border-bottom-left-radius: $radius;
  border-bottom-left-radius: $radius;
}

// Single Side Border Radius
@mixin border-top-radius($radius) {
  @include border-top-right-radius($radius);
  @include border-top-left-radius($radius);
}
@mixin border-right-radius($radius) {
  @include border-top-right-radius($radius);
  @include border-bottom-right-radius($radius);
}
@mixin border-bottom-radius($radius) {
  @include border-bottom-right-radius($radius);
  @include border-bottom-left-radius($radius);
}
@mixin border-left-radius($radius) {
  @include border-top-left-radius($radius);
  @include border-bottom-left-radius($radius);
}

//vibrent border styling:

@mixin vbr-bottom-border($border-color, $border-style, $border-width){
    border-bottom-color: $border-color;
    border-bottom-style: $border-style;
    border-bottom-width: $border-width;
}

// BUTTONS/LINKS
// --------------------------------------------------

@mixin primary-button-style($text-color, $normal-color, $hover-color, $clicked-color, $disabled-text-color, $disabled-color) {
  border-color: $normal-color;
  background-color: $normal-color;
  color: $text-color;
  &:focus{
      color: $text-color;
      //outline: 1px $normal-color auto;
  }
  &:hover {
    border-color: $hover-color;
    background-color: $hover-color;
    color: $text-color;
  }
  &:active{
    border-color: $clicked-color;
    background-color: $clicked-color;
    color: $text-color;
  }
  &:disabled{
    border-color: $disabled-color;
    background-color: $disabled-color;
    color: $disabled-text-color;
  }
}

@mixin secondary-button-style($bg-color, $normal-color, $hover-color, $clicked-color,  $disabled-color) {
  border-color: $normal-color;
  background-color: $bg-color;
  color: $normal-color;
  &:focus{
    //outline: 1px $normal-color auto;
  }
  &:focus,&:hover {
    border-color: $hover-color;
    background-color: $bg-color;
    color: $hover-color;
  }
  &:active{
    border-color: $clicked-color;
    background-color: $bg-color;
    color: $clicked-color;
  }
  &:disabled{
    border-color: $disabled-color;
    background-color: $bg-color;
    color: $disabled-color;
  }
}

@mixin link-style($normal-color, $hover-color, $clicked-color) {
  color: $normal-color;
  &:hover {
    color: $hover-color;
  }
  &:active{
    color: $clicked-color;
  }
  &:visited{
    color: $clicked-color;
  }
}


// PLACEHOLDER
// --------------------------------------------------

@mixin placeholder($color: $input-color-placeholder, $text-indent: 0) {
  &::-moz-placeholder { // Firefox 19+
    color: $color;
  }
  &:-ms-input-placeholder {
    color: $color;
  }
  &::-webkit-input-placeholder {
    color: $color;
    // Safari placeholder margin issue
    text-indent: $text-indent;
  }
}

@mixin vbr-placeholder($color, $disabled-color, $text-indent: 0){
    @include placeholder($color, $text-indent);
    &:disabled, &.disabled{
        @include placeholder($disabled-color, $text-indent);
    }
}

// FLEXBOX
// --------------------------------------------------
// http://philipwalton.github.io/solved-by-flexbox/
// https://github.com/philipwalton/solved-by-flexbox

@mixin display-flex {
  display: -webkit-box;
  display: -webkit-flex;
  display: -moz-box;
  display: -moz-flex;
  display: -ms-flexbox;
  display: flex;
}

@mixin disabledValue($value:disabled){
    @if $value == disabled{
        label{
            color:#e0e0e0;
        }
        input{
            border: 1px dotted #e0e0e0;
            background-color:#FFFFFF;
            color:#FFFFFF;
        }
    }
}

@mixin display-inline-flex {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -moz-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
}

@mixin flex-direction($value: row) {
  @if $value == row-reverse {
    -webkit-box-direction: reverse;
    -webkit-box-orient: horizontal;
  } @else if $value == column {
    -webkit-box-direction: normal;
    -webkit-box-orient: vertical;
  } @else if $value == column-reverse {
    -webkit-box-direction: reverse;
    -webkit-box-orient: vertical;
  } @else {
    -webkit-box-direction: normal;
    -webkit-box-orient: horizontal;
  }
  -webkit-flex-direction: $value;
  -moz-flex-direction: $value;
  -ms-flex-direction: $value;
  flex-direction: $value;
}

@mixin flex-wrap($value: nowrap) {
  // No Webkit Box fallback.
  -webkit-flex-wrap: $value;
  -moz-flex-wrap: $value;
  @if $value == nowrap {
    -ms-flex-wrap: none;
  } @else {
    -ms-flex-wrap: $value;
  }
  flex-wrap: $value;
}

@mixin flex($fg: 1, $fs: null, $fb: null) {
  -webkit-box-flex: $fg;
  -webkit-flex: $fg $fs $fb;
  -moz-box-flex: $fg;
  -moz-flex: $fg $fs $fb;
  -ms-flex: $fg $fs $fb;
  flex: $fg $fs $fb;
}

@mixin flex-flow($values: (row nowrap)) {
  // No Webkit Box fallback.
  -webkit-flex-flow: $values;
  -moz-flex-flow: $values;
  -ms-flex-flow: $values;
  flex-flow: $values;
}

@mixin align-items($value: stretch) {
  @if $value == flex-start {
    -webkit-box-align: start;
    -ms-flex-align: start;
  } @else if $value == flex-end {
    -webkit-box-align: end;
    -ms-flex-align: end;
  } @else {
    -webkit-box-align: $value;
    -ms-flex-align: $value;
  }
  -webkit-align-items: $value;
  -moz-align-items: $value;
  align-items: $value;
}

@mixin align-self($value: auto) {
  -webkit-align-self: $value;
  -moz-align-self: $value;
  @if $value == flex-start {
    -ms-flex-item-align: start;
  } @else if $value == flex-end {
    -ms-flex-item-align: end;
  } @else {
    -ms-flex-item-align: $value;
  }
  align-self: $value;
}

@mixin align-content($value: stretch) {
  -webkit-align-content: $value;
  -moz-align-content: $value;
  @if $value == flex-start {
    -ms-flex-line-pack: start;
  } @else if $value == flex-end {
    -ms-flex-line-pack: end;
  } @else {
    -ms-flex-line-pack: $value;
  }
  align-content: $value;
}

@mixin justify-content($value: stretch) {
  @if $value == flex-start {
    -webkit-box-pack: start;
    -ms-flex-pack: start;
  } @else if $value == flex-end {
    -webkit-box-pack: end;
    -ms-flex-pack: end;
  } @else if $value == space-between {
    -webkit-box-pack: justify;
    -ms-flex-pack: justify;
  } @else {
    -webkit-box-pack: $value;
    -ms-flex-pack: $value;
  }
  -webkit-justify-content: $value;
  -moz-justify-content: $value;
  justify-content: $value;
}

@mixin flex-order($n) {
  -webkit-order: $n;
  -ms-flex-order: $n;
  order: $n;
  -webkit-box-ordinal-group: $n;
}


// Icon minxins

@mixin icon($icon-variable){
    &.icon-left:before{
        content: $icon-variable;
    }
    &.icon-right:after{
        content: $icon-variable;
    }
}

// SELECT mixins

@mixin hideSelectToggle {
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    ::-ms-expand { /* for IE 11 */
        display: none;
    }
}
